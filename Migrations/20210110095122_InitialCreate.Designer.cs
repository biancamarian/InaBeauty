// <auto-generated />
using System;
using InaBeauty.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace InaBeauty.Migrations
{
    [DbContext(typeof(SalonContext))]
    [Migration("20210110095122_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("InaBeauty.Models.AlocareServiciu", b =>
                {
                    b.Property<int>("ServiciuID")
                        .HasColumnType("int");

                    b.Property<int>("MembruID")
                        .HasColumnType("int");

                    b.HasKey("ServiciuID", "MembruID");

                    b.HasIndex("MembruID");

                    b.ToTable("AlocareServiciu");
                });

            modelBuilder.Entity("InaBeauty.Models.Client", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataProgramare")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Prenume")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("InaBeauty.Models.Membru", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAngajare")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Prenume")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Membru");
                });

            modelBuilder.Entity("InaBeauty.Models.Programare", b =>
                {
                    b.Property<int>("ProgramareID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClientID")
                        .HasColumnType("int");

                    b.Property<int>("ServiciuID")
                        .HasColumnType("int");

                    b.HasKey("ProgramareID");

                    b.HasIndex("ClientID");

                    b.HasIndex("ServiciuID");

                    b.ToTable("Programare");
                });

            modelBuilder.Entity("InaBeauty.Models.Serviciu", b =>
                {
                    b.Property<int>("ServiciuID")
                        .HasColumnType("int");

                    b.Property<string>("Denumire")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Descriere")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Durata")
                        .HasColumnType("int");

                    b.Property<int>("Pret")
                        .HasColumnType("int");

                    b.HasKey("ServiciuID");

                    b.ToTable("Serviciu");
                });

            modelBuilder.Entity("InaBeauty.Models.AlocareServiciu", b =>
                {
                    b.HasOne("InaBeauty.Models.Membru", "Membru")
                        .WithMany("AlocariServicii")
                        .HasForeignKey("MembruID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InaBeauty.Models.Serviciu", "Serviciu")
                        .WithMany("AlocariServicii")
                        .HasForeignKey("ServiciuID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InaBeauty.Models.Programare", b =>
                {
                    b.HasOne("InaBeauty.Models.Client", "Client")
                        .WithMany("Programari")
                        .HasForeignKey("ClientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InaBeauty.Models.Serviciu", "Serviciu")
                        .WithMany("Programari")
                        .HasForeignKey("ServiciuID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
